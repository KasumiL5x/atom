// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Scene.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Scene.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace atom {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* Scene_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Scene_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Scene_Reason_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Scene_2eproto() {
  protobuf_AddDesc_Scene_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Scene.proto");
  GOOGLE_CHECK(file != NULL);
  Scene_descriptor_ = file->message_type(0);
  static const int Scene_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scene, transferreason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scene, meshes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scene, lights_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scene, cameras_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scene, materials_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scene, textures_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scene, transforms_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scene, annotations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scene, curves_),
  };
  Scene_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Scene_descriptor_,
      Scene::default_instance_,
      Scene_offsets_,
      -1,
      -1,
      -1,
      sizeof(Scene),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scene, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scene, _is_default_instance_));
  Scene_Reason_descriptor_ = Scene_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Scene_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Scene_descriptor_, &Scene::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Scene_2eproto() {
  delete Scene::default_instance_;
  delete Scene_reflection_;
}

void protobuf_AddDesc_Scene_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::atom::proto::protobuf_AddDesc_SceneObject_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013Scene.proto\022\natom.proto\032\021SceneObject.p"
    "roto\"\364\003\n\005Scene\0220\n\016TransferReason\030\001 \001(\0162\030"
    ".atom.proto.Scene.Reason\022\'\n\006Meshes\030\002 \003(\013"
    "2\027.atom.proto.SceneObject\022\'\n\006Lights\030\003 \003("
    "\0132\027.atom.proto.SceneObject\022(\n\007Cameras\030\004 "
    "\003(\0132\027.atom.proto.SceneObject\022*\n\tMaterial"
    "s\030\005 \003(\0132\027.atom.proto.SceneObject\022)\n\010Text"
    "ures\030\006 \003(\0132\027.atom.proto.SceneObject\022+\n\nT"
    "ransforms\030\007 \003(\0132\027.atom.proto.SceneObject"
    "\022,\n\013Annotations\030\010 \003(\0132\027.atom.proto.Scene"
    "Object\022\'\n\006Curves\030\t \003(\0132\027.atom.proto.Scen"
    "eObject\"b\n\006Reason\022\027\n\023kRebuildOnConnected"
    "\020\000\022\021\n\rkRebuildOnNew\020\001\022\022\n\016kRebuildOnOpen\020"
    "\002\022\n\n\006kAdded\020\003\022\014\n\010kRemoved\020\004b\006proto3", 555);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Scene.proto", &protobuf_RegisterTypes);
  Scene::default_instance_ = new Scene();
  Scene::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Scene_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Scene_2eproto {
  StaticDescriptorInitializer_Scene_2eproto() {
    protobuf_AddDesc_Scene_2eproto();
  }
} static_descriptor_initializer_Scene_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* Scene_Reason_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Scene_Reason_descriptor_;
}
bool Scene_Reason_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Scene_Reason Scene::kRebuildOnConnected;
const Scene_Reason Scene::kRebuildOnNew;
const Scene_Reason Scene::kRebuildOnOpen;
const Scene_Reason Scene::kAdded;
const Scene_Reason Scene::kRemoved;
const Scene_Reason Scene::Reason_MIN;
const Scene_Reason Scene::Reason_MAX;
const int Scene::Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Scene::kTransferReasonFieldNumber;
const int Scene::kMeshesFieldNumber;
const int Scene::kLightsFieldNumber;
const int Scene::kCamerasFieldNumber;
const int Scene::kMaterialsFieldNumber;
const int Scene::kTexturesFieldNumber;
const int Scene::kTransformsFieldNumber;
const int Scene::kAnnotationsFieldNumber;
const int Scene::kCurvesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Scene::Scene()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:atom.proto.Scene)
}

void Scene::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Scene::Scene(const Scene& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:atom.proto.Scene)
}

void Scene::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  transferreason_ = 0;
}

Scene::~Scene() {
  // @@protoc_insertion_point(destructor:atom.proto.Scene)
  SharedDtor();
}

void Scene::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Scene::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Scene::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Scene_descriptor_;
}

const Scene& Scene::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Scene_2eproto();
  return *default_instance_;
}

Scene* Scene::default_instance_ = NULL;

Scene* Scene::New(::google::protobuf::Arena* arena) const {
  Scene* n = new Scene;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Scene::Clear() {
  transferreason_ = 0;
  meshes_.Clear();
  lights_.Clear();
  cameras_.Clear();
  materials_.Clear();
  textures_.Clear();
  transforms_.Clear();
  annotations_.Clear();
  curves_.Clear();
}

bool Scene::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:atom.proto.Scene)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .atom.proto.Scene.Reason TransferReason = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_transferreason(static_cast< ::atom::proto::Scene_Reason >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Meshes;
        break;
      }

      // repeated .atom.proto.SceneObject Meshes = 2;
      case 2: {
        if (tag == 18) {
         parse_Meshes:
          DO_(input->IncrementRecursionDepth());
         parse_loop_Meshes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_meshes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_Meshes;
        if (input->ExpectTag(26)) goto parse_loop_Lights;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .atom.proto.SceneObject Lights = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Lights:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_lights()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_Lights;
        if (input->ExpectTag(34)) goto parse_loop_Cameras;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .atom.proto.SceneObject Cameras = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Cameras:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_cameras()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_Cameras;
        if (input->ExpectTag(42)) goto parse_loop_Materials;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .atom.proto.SceneObject Materials = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Materials:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_materials()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_Materials;
        if (input->ExpectTag(50)) goto parse_loop_Textures;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .atom.proto.SceneObject Textures = 6;
      case 6: {
        if (tag == 50) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Textures:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_textures()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_loop_Textures;
        if (input->ExpectTag(58)) goto parse_loop_Transforms;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .atom.proto.SceneObject Transforms = 7;
      case 7: {
        if (tag == 58) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Transforms:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_transforms()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_Transforms;
        if (input->ExpectTag(66)) goto parse_loop_Annotations;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .atom.proto.SceneObject Annotations = 8;
      case 8: {
        if (tag == 66) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Annotations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_annotations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_Annotations;
        if (input->ExpectTag(74)) goto parse_loop_Curves;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .atom.proto.SceneObject Curves = 9;
      case 9: {
        if (tag == 74) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_Curves:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_curves()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_Curves;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atom.proto.Scene)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atom.proto.Scene)
  return false;
#undef DO_
}

void Scene::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atom.proto.Scene)
  // optional .atom.proto.Scene.Reason TransferReason = 1;
  if (this->transferreason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->transferreason(), output);
  }

  // repeated .atom.proto.SceneObject Meshes = 2;
  for (unsigned int i = 0, n = this->meshes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->meshes(i), output);
  }

  // repeated .atom.proto.SceneObject Lights = 3;
  for (unsigned int i = 0, n = this->lights_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->lights(i), output);
  }

  // repeated .atom.proto.SceneObject Cameras = 4;
  for (unsigned int i = 0, n = this->cameras_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->cameras(i), output);
  }

  // repeated .atom.proto.SceneObject Materials = 5;
  for (unsigned int i = 0, n = this->materials_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->materials(i), output);
  }

  // repeated .atom.proto.SceneObject Textures = 6;
  for (unsigned int i = 0, n = this->textures_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->textures(i), output);
  }

  // repeated .atom.proto.SceneObject Transforms = 7;
  for (unsigned int i = 0, n = this->transforms_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->transforms(i), output);
  }

  // repeated .atom.proto.SceneObject Annotations = 8;
  for (unsigned int i = 0, n = this->annotations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->annotations(i), output);
  }

  // repeated .atom.proto.SceneObject Curves = 9;
  for (unsigned int i = 0, n = this->curves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->curves(i), output);
  }

  // @@protoc_insertion_point(serialize_end:atom.proto.Scene)
}

::google::protobuf::uint8* Scene::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:atom.proto.Scene)
  // optional .atom.proto.Scene.Reason TransferReason = 1;
  if (this->transferreason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->transferreason(), target);
  }

  // repeated .atom.proto.SceneObject Meshes = 2;
  for (unsigned int i = 0, n = this->meshes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->meshes(i), target);
  }

  // repeated .atom.proto.SceneObject Lights = 3;
  for (unsigned int i = 0, n = this->lights_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->lights(i), target);
  }

  // repeated .atom.proto.SceneObject Cameras = 4;
  for (unsigned int i = 0, n = this->cameras_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->cameras(i), target);
  }

  // repeated .atom.proto.SceneObject Materials = 5;
  for (unsigned int i = 0, n = this->materials_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->materials(i), target);
  }

  // repeated .atom.proto.SceneObject Textures = 6;
  for (unsigned int i = 0, n = this->textures_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->textures(i), target);
  }

  // repeated .atom.proto.SceneObject Transforms = 7;
  for (unsigned int i = 0, n = this->transforms_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->transforms(i), target);
  }

  // repeated .atom.proto.SceneObject Annotations = 8;
  for (unsigned int i = 0, n = this->annotations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->annotations(i), target);
  }

  // repeated .atom.proto.SceneObject Curves = 9;
  for (unsigned int i = 0, n = this->curves_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->curves(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:atom.proto.Scene)
  return target;
}

int Scene::ByteSize() const {
  int total_size = 0;

  // optional .atom.proto.Scene.Reason TransferReason = 1;
  if (this->transferreason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->transferreason());
  }

  // repeated .atom.proto.SceneObject Meshes = 2;
  total_size += 1 * this->meshes_size();
  for (int i = 0; i < this->meshes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->meshes(i));
  }

  // repeated .atom.proto.SceneObject Lights = 3;
  total_size += 1 * this->lights_size();
  for (int i = 0; i < this->lights_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lights(i));
  }

  // repeated .atom.proto.SceneObject Cameras = 4;
  total_size += 1 * this->cameras_size();
  for (int i = 0; i < this->cameras_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cameras(i));
  }

  // repeated .atom.proto.SceneObject Materials = 5;
  total_size += 1 * this->materials_size();
  for (int i = 0; i < this->materials_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->materials(i));
  }

  // repeated .atom.proto.SceneObject Textures = 6;
  total_size += 1 * this->textures_size();
  for (int i = 0; i < this->textures_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->textures(i));
  }

  // repeated .atom.proto.SceneObject Transforms = 7;
  total_size += 1 * this->transforms_size();
  for (int i = 0; i < this->transforms_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->transforms(i));
  }

  // repeated .atom.proto.SceneObject Annotations = 8;
  total_size += 1 * this->annotations_size();
  for (int i = 0; i < this->annotations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->annotations(i));
  }

  // repeated .atom.proto.SceneObject Curves = 9;
  total_size += 1 * this->curves_size();
  for (int i = 0; i < this->curves_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->curves(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Scene::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Scene* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Scene>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Scene::MergeFrom(const Scene& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  meshes_.MergeFrom(from.meshes_);
  lights_.MergeFrom(from.lights_);
  cameras_.MergeFrom(from.cameras_);
  materials_.MergeFrom(from.materials_);
  textures_.MergeFrom(from.textures_);
  transforms_.MergeFrom(from.transforms_);
  annotations_.MergeFrom(from.annotations_);
  curves_.MergeFrom(from.curves_);
  if (from.transferreason() != 0) {
    set_transferreason(from.transferreason());
  }
}

void Scene::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scene::CopyFrom(const Scene& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scene::IsInitialized() const {

  return true;
}

void Scene::Swap(Scene* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Scene::InternalSwap(Scene* other) {
  std::swap(transferreason_, other->transferreason_);
  meshes_.UnsafeArenaSwap(&other->meshes_);
  lights_.UnsafeArenaSwap(&other->lights_);
  cameras_.UnsafeArenaSwap(&other->cameras_);
  materials_.UnsafeArenaSwap(&other->materials_);
  textures_.UnsafeArenaSwap(&other->textures_);
  transforms_.UnsafeArenaSwap(&other->transforms_);
  annotations_.UnsafeArenaSwap(&other->annotations_);
  curves_.UnsafeArenaSwap(&other->curves_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Scene::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Scene_descriptor_;
  metadata.reflection = Scene_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Scene

// optional .atom.proto.Scene.Reason TransferReason = 1;
void Scene::clear_transferreason() {
  transferreason_ = 0;
}
 ::atom::proto::Scene_Reason Scene::transferreason() const {
  // @@protoc_insertion_point(field_get:atom.proto.Scene.TransferReason)
  return static_cast< ::atom::proto::Scene_Reason >(transferreason_);
}
 void Scene::set_transferreason(::atom::proto::Scene_Reason value) {
  
  transferreason_ = value;
  // @@protoc_insertion_point(field_set:atom.proto.Scene.TransferReason)
}

// repeated .atom.proto.SceneObject Meshes = 2;
int Scene::meshes_size() const {
  return meshes_.size();
}
void Scene::clear_meshes() {
  meshes_.Clear();
}
const ::atom::proto::SceneObject& Scene::meshes(int index) const {
  // @@protoc_insertion_point(field_get:atom.proto.Scene.Meshes)
  return meshes_.Get(index);
}
::atom::proto::SceneObject* Scene::mutable_meshes(int index) {
  // @@protoc_insertion_point(field_mutable:atom.proto.Scene.Meshes)
  return meshes_.Mutable(index);
}
::atom::proto::SceneObject* Scene::add_meshes() {
  // @@protoc_insertion_point(field_add:atom.proto.Scene.Meshes)
  return meshes_.Add();
}
::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >*
Scene::mutable_meshes() {
  // @@protoc_insertion_point(field_mutable_list:atom.proto.Scene.Meshes)
  return &meshes_;
}
const ::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >&
Scene::meshes() const {
  // @@protoc_insertion_point(field_list:atom.proto.Scene.Meshes)
  return meshes_;
}

// repeated .atom.proto.SceneObject Lights = 3;
int Scene::lights_size() const {
  return lights_.size();
}
void Scene::clear_lights() {
  lights_.Clear();
}
const ::atom::proto::SceneObject& Scene::lights(int index) const {
  // @@protoc_insertion_point(field_get:atom.proto.Scene.Lights)
  return lights_.Get(index);
}
::atom::proto::SceneObject* Scene::mutable_lights(int index) {
  // @@protoc_insertion_point(field_mutable:atom.proto.Scene.Lights)
  return lights_.Mutable(index);
}
::atom::proto::SceneObject* Scene::add_lights() {
  // @@protoc_insertion_point(field_add:atom.proto.Scene.Lights)
  return lights_.Add();
}
::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >*
Scene::mutable_lights() {
  // @@protoc_insertion_point(field_mutable_list:atom.proto.Scene.Lights)
  return &lights_;
}
const ::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >&
Scene::lights() const {
  // @@protoc_insertion_point(field_list:atom.proto.Scene.Lights)
  return lights_;
}

// repeated .atom.proto.SceneObject Cameras = 4;
int Scene::cameras_size() const {
  return cameras_.size();
}
void Scene::clear_cameras() {
  cameras_.Clear();
}
const ::atom::proto::SceneObject& Scene::cameras(int index) const {
  // @@protoc_insertion_point(field_get:atom.proto.Scene.Cameras)
  return cameras_.Get(index);
}
::atom::proto::SceneObject* Scene::mutable_cameras(int index) {
  // @@protoc_insertion_point(field_mutable:atom.proto.Scene.Cameras)
  return cameras_.Mutable(index);
}
::atom::proto::SceneObject* Scene::add_cameras() {
  // @@protoc_insertion_point(field_add:atom.proto.Scene.Cameras)
  return cameras_.Add();
}
::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >*
Scene::mutable_cameras() {
  // @@protoc_insertion_point(field_mutable_list:atom.proto.Scene.Cameras)
  return &cameras_;
}
const ::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >&
Scene::cameras() const {
  // @@protoc_insertion_point(field_list:atom.proto.Scene.Cameras)
  return cameras_;
}

// repeated .atom.proto.SceneObject Materials = 5;
int Scene::materials_size() const {
  return materials_.size();
}
void Scene::clear_materials() {
  materials_.Clear();
}
const ::atom::proto::SceneObject& Scene::materials(int index) const {
  // @@protoc_insertion_point(field_get:atom.proto.Scene.Materials)
  return materials_.Get(index);
}
::atom::proto::SceneObject* Scene::mutable_materials(int index) {
  // @@protoc_insertion_point(field_mutable:atom.proto.Scene.Materials)
  return materials_.Mutable(index);
}
::atom::proto::SceneObject* Scene::add_materials() {
  // @@protoc_insertion_point(field_add:atom.proto.Scene.Materials)
  return materials_.Add();
}
::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >*
Scene::mutable_materials() {
  // @@protoc_insertion_point(field_mutable_list:atom.proto.Scene.Materials)
  return &materials_;
}
const ::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >&
Scene::materials() const {
  // @@protoc_insertion_point(field_list:atom.proto.Scene.Materials)
  return materials_;
}

// repeated .atom.proto.SceneObject Textures = 6;
int Scene::textures_size() const {
  return textures_.size();
}
void Scene::clear_textures() {
  textures_.Clear();
}
const ::atom::proto::SceneObject& Scene::textures(int index) const {
  // @@protoc_insertion_point(field_get:atom.proto.Scene.Textures)
  return textures_.Get(index);
}
::atom::proto::SceneObject* Scene::mutable_textures(int index) {
  // @@protoc_insertion_point(field_mutable:atom.proto.Scene.Textures)
  return textures_.Mutable(index);
}
::atom::proto::SceneObject* Scene::add_textures() {
  // @@protoc_insertion_point(field_add:atom.proto.Scene.Textures)
  return textures_.Add();
}
::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >*
Scene::mutable_textures() {
  // @@protoc_insertion_point(field_mutable_list:atom.proto.Scene.Textures)
  return &textures_;
}
const ::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >&
Scene::textures() const {
  // @@protoc_insertion_point(field_list:atom.proto.Scene.Textures)
  return textures_;
}

// repeated .atom.proto.SceneObject Transforms = 7;
int Scene::transforms_size() const {
  return transforms_.size();
}
void Scene::clear_transforms() {
  transforms_.Clear();
}
const ::atom::proto::SceneObject& Scene::transforms(int index) const {
  // @@protoc_insertion_point(field_get:atom.proto.Scene.Transforms)
  return transforms_.Get(index);
}
::atom::proto::SceneObject* Scene::mutable_transforms(int index) {
  // @@protoc_insertion_point(field_mutable:atom.proto.Scene.Transforms)
  return transforms_.Mutable(index);
}
::atom::proto::SceneObject* Scene::add_transforms() {
  // @@protoc_insertion_point(field_add:atom.proto.Scene.Transforms)
  return transforms_.Add();
}
::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >*
Scene::mutable_transforms() {
  // @@protoc_insertion_point(field_mutable_list:atom.proto.Scene.Transforms)
  return &transforms_;
}
const ::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >&
Scene::transforms() const {
  // @@protoc_insertion_point(field_list:atom.proto.Scene.Transforms)
  return transforms_;
}

// repeated .atom.proto.SceneObject Annotations = 8;
int Scene::annotations_size() const {
  return annotations_.size();
}
void Scene::clear_annotations() {
  annotations_.Clear();
}
const ::atom::proto::SceneObject& Scene::annotations(int index) const {
  // @@protoc_insertion_point(field_get:atom.proto.Scene.Annotations)
  return annotations_.Get(index);
}
::atom::proto::SceneObject* Scene::mutable_annotations(int index) {
  // @@protoc_insertion_point(field_mutable:atom.proto.Scene.Annotations)
  return annotations_.Mutable(index);
}
::atom::proto::SceneObject* Scene::add_annotations() {
  // @@protoc_insertion_point(field_add:atom.proto.Scene.Annotations)
  return annotations_.Add();
}
::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >*
Scene::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_list:atom.proto.Scene.Annotations)
  return &annotations_;
}
const ::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >&
Scene::annotations() const {
  // @@protoc_insertion_point(field_list:atom.proto.Scene.Annotations)
  return annotations_;
}

// repeated .atom.proto.SceneObject Curves = 9;
int Scene::curves_size() const {
  return curves_.size();
}
void Scene::clear_curves() {
  curves_.Clear();
}
const ::atom::proto::SceneObject& Scene::curves(int index) const {
  // @@protoc_insertion_point(field_get:atom.proto.Scene.Curves)
  return curves_.Get(index);
}
::atom::proto::SceneObject* Scene::mutable_curves(int index) {
  // @@protoc_insertion_point(field_mutable:atom.proto.Scene.Curves)
  return curves_.Mutable(index);
}
::atom::proto::SceneObject* Scene::add_curves() {
  // @@protoc_insertion_point(field_add:atom.proto.Scene.Curves)
  return curves_.Add();
}
::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >*
Scene::mutable_curves() {
  // @@protoc_insertion_point(field_mutable_list:atom.proto.Scene.Curves)
  return &curves_;
}
const ::google::protobuf::RepeatedPtrField< ::atom::proto::SceneObject >&
Scene::curves() const {
  // @@protoc_insertion_point(field_list:atom.proto.Scene.Curves)
  return curves_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace atom

// @@protoc_insertion_point(global_scope)
