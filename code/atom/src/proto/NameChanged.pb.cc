// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NameChanged.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "NameChanged.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace atom {
namespace proto {

namespace {

const ::google::protobuf::Descriptor* NameChanged_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NameChanged_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_NameChanged_2eproto() {
  protobuf_AddDesc_NameChanged_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "NameChanged.proto");
  GOOGLE_CHECK(file != NULL);
  NameChanged_descriptor_ = file->message_type(0);
  static const int NameChanged_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameChanged, oldname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameChanged, newname_),
  };
  NameChanged_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NameChanged_descriptor_,
      NameChanged::default_instance_,
      NameChanged_offsets_,
      -1,
      -1,
      -1,
      sizeof(NameChanged),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameChanged, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NameChanged, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_NameChanged_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NameChanged_descriptor_, &NameChanged::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_NameChanged_2eproto() {
  delete NameChanged::default_instance_;
  delete NameChanged_reflection_;
}

void protobuf_AddDesc_NameChanged_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021NameChanged.proto\022\natom.proto\"/\n\013NameC"
    "hanged\022\017\n\007OldName\030\001 \001(\t\022\017\n\007NewName\030\002 \001(\t"
    "b\006proto3", 88);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "NameChanged.proto", &protobuf_RegisterTypes);
  NameChanged::default_instance_ = new NameChanged();
  NameChanged::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_NameChanged_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_NameChanged_2eproto {
  StaticDescriptorInitializer_NameChanged_2eproto() {
    protobuf_AddDesc_NameChanged_2eproto();
  }
} static_descriptor_initializer_NameChanged_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameChanged::kOldNameFieldNumber;
const int NameChanged::kNewNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameChanged::NameChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:atom.proto.NameChanged)
}

void NameChanged::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NameChanged::NameChanged(const NameChanged& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:atom.proto.NameChanged)
}

void NameChanged::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  oldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NameChanged::~NameChanged() {
  // @@protoc_insertion_point(destructor:atom.proto.NameChanged)
  SharedDtor();
}

void NameChanged::SharedDtor() {
  oldname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NameChanged::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NameChanged::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NameChanged_descriptor_;
}

const NameChanged& NameChanged::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_NameChanged_2eproto();
  return *default_instance_;
}

NameChanged* NameChanged::default_instance_ = NULL;

NameChanged* NameChanged::New(::google::protobuf::Arena* arena) const {
  NameChanged* n = new NameChanged;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NameChanged::Clear() {
  oldname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NameChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:atom.proto.NameChanged)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string OldName = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oldname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->oldname().data(), this->oldname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "atom.proto.NameChanged.OldName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_NewName;
        break;
      }

      // optional string NewName = 2;
      case 2: {
        if (tag == 18) {
         parse_NewName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_newname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->newname().data(), this->newname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "atom.proto.NameChanged.NewName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:atom.proto.NameChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:atom.proto.NameChanged)
  return false;
#undef DO_
}

void NameChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:atom.proto.NameChanged)
  // optional string OldName = 1;
  if (this->oldname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oldname().data(), this->oldname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "atom.proto.NameChanged.OldName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->oldname(), output);
  }

  // optional string NewName = 2;
  if (this->newname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newname().data(), this->newname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "atom.proto.NameChanged.NewName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->newname(), output);
  }

  // @@protoc_insertion_point(serialize_end:atom.proto.NameChanged)
}

::google::protobuf::uint8* NameChanged::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:atom.proto.NameChanged)
  // optional string OldName = 1;
  if (this->oldname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->oldname().data(), this->oldname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "atom.proto.NameChanged.OldName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->oldname(), target);
  }

  // optional string NewName = 2;
  if (this->newname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->newname().data(), this->newname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "atom.proto.NameChanged.NewName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->newname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:atom.proto.NameChanged)
  return target;
}

int NameChanged::ByteSize() const {
  int total_size = 0;

  // optional string OldName = 1;
  if (this->oldname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oldname());
  }

  // optional string NewName = 2;
  if (this->newname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->newname());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NameChanged::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NameChanged* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NameChanged>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NameChanged::MergeFrom(const NameChanged& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.oldname().size() > 0) {

    oldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from.newname().size() > 0) {

    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
}

void NameChanged::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameChanged::CopyFrom(const NameChanged& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameChanged::IsInitialized() const {

  return true;
}

void NameChanged::Swap(NameChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameChanged::InternalSwap(NameChanged* other) {
  oldname_.Swap(&other->oldname_);
  newname_.Swap(&other->newname_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NameChanged::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NameChanged_descriptor_;
  metadata.reflection = NameChanged_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NameChanged

// optional string OldName = 1;
void NameChanged::clear_oldname() {
  oldname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NameChanged::oldname() const {
  // @@protoc_insertion_point(field_get:atom.proto.NameChanged.OldName)
  return oldname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NameChanged::set_oldname(const ::std::string& value) {
  
  oldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:atom.proto.NameChanged.OldName)
}
 void NameChanged::set_oldname(const char* value) {
  
  oldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:atom.proto.NameChanged.OldName)
}
 void NameChanged::set_oldname(const char* value, size_t size) {
  
  oldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:atom.proto.NameChanged.OldName)
}
 ::std::string* NameChanged::mutable_oldname() {
  
  // @@protoc_insertion_point(field_mutable:atom.proto.NameChanged.OldName)
  return oldname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NameChanged::release_oldname() {
  
  return oldname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NameChanged::set_allocated_oldname(::std::string* oldname) {
  if (oldname != NULL) {
    
  } else {
    
  }
  oldname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oldname);
  // @@protoc_insertion_point(field_set_allocated:atom.proto.NameChanged.OldName)
}

// optional string NewName = 2;
void NameChanged::clear_newname() {
  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NameChanged::newname() const {
  // @@protoc_insertion_point(field_get:atom.proto.NameChanged.NewName)
  return newname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NameChanged::set_newname(const ::std::string& value) {
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:atom.proto.NameChanged.NewName)
}
 void NameChanged::set_newname(const char* value) {
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:atom.proto.NameChanged.NewName)
}
 void NameChanged::set_newname(const char* value, size_t size) {
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:atom.proto.NameChanged.NewName)
}
 ::std::string* NameChanged::mutable_newname() {
  
  // @@protoc_insertion_point(field_mutable:atom.proto.NameChanged.NewName)
  return newname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NameChanged::release_newname() {
  
  return newname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NameChanged::set_allocated_newname(::std::string* newname) {
  if (newname != NULL) {
    
  } else {
    
  }
  newname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newname);
  // @@protoc_insertion_point(field_set_allocated:atom.proto.NameChanged.NewName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace atom

// @@protoc_insertion_point(global_scope)
