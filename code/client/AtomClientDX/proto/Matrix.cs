// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Matrix.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Atom.Proto {

  /// <summary>Holder for reflection information generated from Matrix.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class MatrixReflection {

    #region Descriptor
    /// <summary>File descriptor for Matrix.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MatrixReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxNYXRyaXgucHJvdG8SCmF0b20ucHJvdG8iMwoGTWF0cml4EgwKBFJvd3MY",
            "ASABKA0SDAoEQ29scxgCIAEoDRINCgFNGAMgAygCQgIQAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Atom.Proto.Matrix), global::Atom.Proto.Matrix.Parser, new[]{ "Rows", "Cols", "M" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Matrix : pb::IMessage<Matrix> {
    private static readonly pb::MessageParser<Matrix> _parser = new pb::MessageParser<Matrix>(() => new Matrix());
    public static pb::MessageParser<Matrix> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Atom.Proto.MatrixReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Matrix() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Matrix(Matrix other) : this() {
      rows_ = other.rows_;
      cols_ = other.cols_;
      m_ = other.m_.Clone();
    }

    public Matrix Clone() {
      return new Matrix(this);
    }

    /// <summary>Field number for the "Rows" field.</summary>
    public const int RowsFieldNumber = 1;
    private uint rows_;
    public uint Rows {
      get { return rows_; }
      set {
        rows_ = value;
      }
    }

    /// <summary>Field number for the "Cols" field.</summary>
    public const int ColsFieldNumber = 2;
    private uint cols_;
    public uint Cols {
      get { return cols_; }
      set {
        cols_ = value;
      }
    }

    /// <summary>Field number for the "M" field.</summary>
    public const int MFieldNumber = 3;
    private static readonly pb::FieldCodec<float> _repeated_m_codec
        = pb::FieldCodec.ForFloat(26);
    private readonly pbc::RepeatedField<float> m_ = new pbc::RepeatedField<float>();
    public pbc::RepeatedField<float> M {
      get { return m_; }
    }

    public override bool Equals(object other) {
      return Equals(other as Matrix);
    }

    public bool Equals(Matrix other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Rows != other.Rows) return false;
      if (Cols != other.Cols) return false;
      if(!m_.Equals(other.m_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Rows != 0) hash ^= Rows.GetHashCode();
      if (Cols != 0) hash ^= Cols.GetHashCode();
      hash ^= m_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Rows != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Rows);
      }
      if (Cols != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Cols);
      }
      m_.WriteTo(output, _repeated_m_codec);
    }

    public int CalculateSize() {
      int size = 0;
      if (Rows != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Rows);
      }
      if (Cols != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Cols);
      }
      size += m_.CalculateSize(_repeated_m_codec);
      return size;
    }

    public void MergeFrom(Matrix other) {
      if (other == null) {
        return;
      }
      if (other.Rows != 0) {
        Rows = other.Rows;
      }
      if (other.Cols != 0) {
        Cols = other.Cols;
      }
      m_.Add(other.m_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Rows = input.ReadUInt32();
            break;
          }
          case 16: {
            Cols = input.ReadUInt32();
            break;
          }
          case 26:
          case 29: {
            m_.AddEntriesFrom(input, _repeated_m_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
