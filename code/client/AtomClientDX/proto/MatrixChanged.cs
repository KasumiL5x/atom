// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MatrixChanged.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Atom.Proto {

  /// <summary>Holder for reflection information generated from MatrixChanged.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class MatrixChangedReflection {

    #region Descriptor
    /// <summary>File descriptor for MatrixChanged.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MatrixChangedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNNYXRyaXhDaGFuZ2VkLnByb3RvEgphdG9tLnByb3RvGgxNYXRyaXgucHJv",
            "dG8iRwoNTWF0cml4Q2hhbmdlZBISCgpPYmplY3ROYW1lGAEgASgJEiIKBk1h",
            "dHJpeBgCIAEoCzISLmF0b20ucHJvdG8uTWF0cml4YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Atom.Proto.MatrixReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Atom.Proto.MatrixChanged), global::Atom.Proto.MatrixChanged.Parser, new[]{ "ObjectName", "Matrix" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MatrixChanged : pb::IMessage<MatrixChanged> {
    private static readonly pb::MessageParser<MatrixChanged> _parser = new pb::MessageParser<MatrixChanged>(() => new MatrixChanged());
    public static pb::MessageParser<MatrixChanged> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::Atom.Proto.MatrixChangedReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public MatrixChanged() {
      OnConstruction();
    }

    partial void OnConstruction();

    public MatrixChanged(MatrixChanged other) : this() {
      objectName_ = other.objectName_;
      Matrix = other.matrix_ != null ? other.Matrix.Clone() : null;
    }

    public MatrixChanged Clone() {
      return new MatrixChanged(this);
    }

    /// <summary>Field number for the "ObjectName" field.</summary>
    public const int ObjectNameFieldNumber = 1;
    private string objectName_ = "";
    public string ObjectName {
      get { return objectName_; }
      set {
        objectName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Matrix" field.</summary>
    public const int MatrixFieldNumber = 2;
    private global::Atom.Proto.Matrix matrix_;
    public global::Atom.Proto.Matrix Matrix {
      get { return matrix_; }
      set {
        matrix_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as MatrixChanged);
    }

    public bool Equals(MatrixChanged other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ObjectName != other.ObjectName) return false;
      if (!object.Equals(Matrix, other.Matrix)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (ObjectName.Length != 0) hash ^= ObjectName.GetHashCode();
      if (matrix_ != null) hash ^= Matrix.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (ObjectName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ObjectName);
      }
      if (matrix_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Matrix);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (ObjectName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ObjectName);
      }
      if (matrix_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Matrix);
      }
      return size;
    }

    public void MergeFrom(MatrixChanged other) {
      if (other == null) {
        return;
      }
      if (other.ObjectName.Length != 0) {
        ObjectName = other.ObjectName;
      }
      if (other.matrix_ != null) {
        if (matrix_ == null) {
          matrix_ = new global::Atom.Proto.Matrix();
        }
        Matrix.MergeFrom(other.Matrix);
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ObjectName = input.ReadString();
            break;
          }
          case 18: {
            if (matrix_ == null) {
              matrix_ = new global::Atom.Proto.Matrix();
            }
            input.ReadMessage(matrix_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
